name: Push Tag on Main

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  push-tag:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Check if repo is already cloned
        id: check-repo-cloned
        run: |
          if [ -d "sdk-libs" ]; then
             echo "REPO_CLONED=true" >> $GITHUB_ENV
          else
             echo "REPO_CLONED=false" >> $GITHUB_ENV
          fi

      - name: Clone repo and update OR Update
        run: |
          source $GITHUB_ENV
          repo_cloned=$REPO_CLONED
          if [ "$repo_cloned" == "false" ]; then
              git clone https://github.com/arhacc/sdk-libs.git
              cd sdk-libs
              git fetch
              git checkout main
              git pull
          else
              cd sdk-libs
              git fetch
              git checkout main
              git pull
          fi
          
      - name: Get last tag pushed
        id: get-last-tag-pushed
        run: |
          last_tag_pushed=$(git ls-remote --tags origin | awk -F/ '{print $3}' | sort -V | tail -n1)
          last_tag_valid=$(echo "$last_tag_pushed" | sed 's/[^0-9]*$//')
          echo "LAST_TAG_PUSHED=$last_tag_valid" >> $GITHUB_ENV

      - name: Increment tag
        id: increment-tag
        run: |
          source $GITHUB_ENV
          last_tag_valid=${LAST_TAG_PUSHED}
          version=$(echo $last_tag_valid | sed 's/[^0-9]*$//g')
          new_version=$(echo "$version" | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')
          echo "NEW_TAG=$new_version" >> $GITHUB_ENV

      - name: Get last commit in main branch
        id: get-last-commit-main
        run: |
          git fetch
          git pull
          last_commit_main=$(git rev-parse main)
          echo "LAST_COMMIT_MAIN=$last_commit_main" >> $GITHUB_ENV
          
      - name: Create and push tag
        env:
          GITHUB_USER: arhacc
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          source $GITHUB_ENV
          new_tag=$NEW_TAG
          git config user.email "$GITHUB_USER@users.noreply.github.com"
          git config user.name  "$GITHUB_USER"
          git remote update
          git pull
          last_commit_main=${LAST_COMMIT_MAIN}
          git checkout main
          git commit --allow-empty -m "$new_tag"
          git tag $new_tag
          git push origin $new_tag
      
      - name: Clean up
        run: |
          rm -rf sdk-libs
